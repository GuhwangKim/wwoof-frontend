{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rlawl\\\\IdeaProjects\\\\wwoof-frontend\\\\wwoof-frontend\\\\src\\\\components\\\\mypage\\\\MyinfoHost.js\",\n  _s = $RefreshSig$();\nimport { Link } from \"react-router-dom\";\nimport { useLoaderData, json, defer, Await } from \"react-router-dom\";\nimport { Suspense } from \"react\";\nimport HostRegisterForm from \"./HostRegisterForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction MyinfoHost() {\n  _s();\n  const {\n    host\n  } = useLoaderData();\n  // loader를 이용해서 가져온 response 정보\n  console.log(host);\n  if ({\n    host\n  } == undefined) {\n    return /*#__PURE__*/_jsxDEV(Suspense, {\n      fallback: /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          textAlign: \"center\"\n        },\n        children: \"Loading\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 27\n      }, this),\n      children: /*#__PURE__*/_jsxDEV(Await, {\n        resolve: host,\n        children: loadHost => /*#__PURE__*/_jsxDEV(HostRegisterForm, {\n          host: loadHost,\n          method: \"PUT\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 26\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\uC2E0\\uCCAD\\uB0B4\\uC5ED\\uC774 \\uC5C6\\uC74C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"newHost\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          children: \"\\uAE00\\uB4F1\\uB85D\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n}\n_s(MyinfoHost, \"8qOkUzr8TzaKW3OIwQsW8pd0KKw=\", false, function () {\n  return [useLoaderData];\n});\n_c = MyinfoHost;\nexport default MyinfoHost;\nasync function loadHost() {\n  // 여기서 상세보기 조회 -> 값이 있으면 hostEdit -> hostRegisterForm에 method put으로\n  // 매번 token header 에 넣어서 보내야하는지 모르겠음\n}\nexport function loader() {\n  // 해당 로드 안에서 response 즉 Promise를 기다리는 것을 피하기 위함 }\n  return defer({\n    host: loadHost()\n  });\n}\nvar _c;\n$RefreshReg$(_c, \"MyinfoHost\");","map":{"version":3,"names":["Link","useLoaderData","json","defer","Await","Suspense","HostRegisterForm","jsxDEV","_jsxDEV","Fragment","_Fragment","MyinfoHost","_s","host","console","log","undefined","fallback","style","textAlign","children","fileName","_jsxFileName","lineNumber","columnNumber","resolve","loadHost","method","to","type","_c","loader","$RefreshReg$"],"sources":["C:/Users/rlawl/IdeaProjects/wwoof-frontend/wwoof-frontend/src/components/mypage/MyinfoHost.js"],"sourcesContent":["import { Link } from \"react-router-dom\";\r\nimport { useLoaderData, json, defer, Await} from \"react-router-dom\";\r\nimport { Suspense } from \"react\";\r\nimport HostRegisterForm from \"./HostRegisterForm\";\r\n\r\nfunction MyinfoHost() {\r\n  const { host } = useLoaderData();\r\n  // loader를 이용해서 가져온 response 정보\r\n  console.log(host);\r\n  if ({host} == undefined) {\r\n    return (\r\n      <Suspense fallback={<p style={{ textAlign: \"center\" }}>Loading</p>}>\r\n        <Await resolve={host}>\r\n          {(loadHost) => <HostRegisterForm host={loadHost} method=\"PUT\" />}\r\n          {/* 수정으로 넘김 */}\r\n        </Await>\r\n      </Suspense>\r\n    );\r\n  } else {\r\n    return (\r\n      <>\r\n        <h2>신청내역이 없음</h2>\r\n        <Link to=\"newHost\">\r\n          <button type=\"button\">글등록</button>\r\n        </Link>\r\n      </>\r\n    );\r\n  }\r\n}\r\nexport default MyinfoHost;\r\n\r\nasync function loadHost() {\r\n  // 여기서 상세보기 조회 -> 값이 있으면 hostEdit -> hostRegisterForm에 method put으로\r\n  // 매번 token header 에 넣어서 보내야하는지 모르겠음\r\n}\r\n\r\nexport function loader() {\r\n  // 해당 로드 안에서 response 즉 Promise를 기다리는 것을 피하기 위함 }\r\n  return defer({\r\n    host: loadHost(),\r\n  });\r\n}\r\n"],"mappings":";;AAAA,SAASA,IAAI,QAAQ,kBAAkB;AACvC,SAASC,aAAa,EAAEC,IAAI,EAAEC,KAAK,EAAEC,KAAK,QAAO,kBAAkB;AACnE,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAOC,gBAAgB,MAAM,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAElD,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACpB,MAAM;IAAEC;EAAK,CAAC,GAAGZ,aAAa,CAAC,CAAC;EAChC;EACAa,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;EACjB,IAAI;IAACA;EAAI,CAAC,IAAIG,SAAS,EAAE;IACvB,oBACER,OAAA,CAACH,QAAQ;MAACY,QAAQ,eAAET,OAAA;QAAGU,KAAK,EAAE;UAAEC,SAAS,EAAE;QAAS,CAAE;QAAAC,QAAA,EAAC;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAE;MAAAJ,QAAA,eACjEZ,OAAA,CAACJ,KAAK;QAACqB,OAAO,EAAEZ,IAAK;QAAAO,QAAA,EACjBM,QAAQ,iBAAKlB,OAAA,CAACF,gBAAgB;UAACO,IAAI,EAAEa,QAAS;UAACC,MAAM,EAAC;QAAK;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAE3D;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAEf,CAAC,MAAM;IACL,oBACEhB,OAAA,CAAAE,SAAA;MAAAU,QAAA,gBACEZ,OAAA;QAAAY,QAAA,EAAI;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACjBhB,OAAA,CAACR,IAAI;QAAC4B,EAAE,EAAC,SAAS;QAAAR,QAAA,eAChBZ,OAAA;UAAQqB,IAAI,EAAC,QAAQ;UAAAT,QAAA,EAAC;QAAG;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9B,CAAC;IAAA,eACP,CAAC;EAEP;AACF;AAACZ,EAAA,CAvBQD,UAAU;EAAA,QACAV,aAAa;AAAA;AAAA6B,EAAA,GADvBnB,UAAU;AAwBnB,eAAeA,UAAU;AAEzB,eAAee,QAAQA,CAAA,EAAG;EACxB;EACA;AAAA;AAGF,OAAO,SAASK,MAAMA,CAAA,EAAG;EACvB;EACA,OAAO5B,KAAK,CAAC;IACXU,IAAI,EAAEa,QAAQ,CAAC;EACjB,CAAC,CAAC;AACJ;AAAC,IAAAI,EAAA;AAAAE,YAAA,CAAAF,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}