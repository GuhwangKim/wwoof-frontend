{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rlawl\\\\IdeaProjects\\\\wwoof-frontend\\\\wwoof-frontend\\\\src\\\\components\\\\mypage\\\\FileList.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FileList = _ref => {\n  _s();\n  let {\n    fileList,\n    setFileList,\n    uploadedFiles,\n    deleteFileList,\n    setdeleteFileList,\n    hostFileCnt,\n    setHostFileCnt\n  } = _ref;\n  // (화면 보여주기용)\n  // 서버에 저장되어있는 파일들의 이름을 저장한 배열 화면에 보여줌\n  // delete 할 시에 삭제 되어 보여주기 위함\n  const [screenImgs, setScreenImgs] = useState([]);\n\n  // 이미 서버에 저장된 파일들을 담아줌 \n  useEffect(() => {\n    uploadedFiles && setScreenImgs([...uploadedFiles]);\n  }, []);\n  const onClick = name => {\n    setFileList(fileList.filter(f => name !== f.name));\n  };\n  const onClickDelte = filename => {\n    // 화면에서 삭제함\n    setScreenImgs(screenImgs.filter(f => filename !== f.filename));\n    // 호스트 이미지 파일 개수 하나 빼줌 \n    hostFileCnt--;\n    setHostFileCnt(hostFileCnt);\n    // delete 배열에 저장함\n    setdeleteFileList([...deleteFileList, filename]);\n  };\n  deleteFileList.forEach(f => console.log(\"deleteFileList\" + f));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [screenImgs && screenImgs.map(f => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: f.fileUri,\n          alt: f.filename,\n          width: \"100\",\n          height: \"100\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => onClickDelte(f.filename),\n          children: \"X\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 15\n        }, this)]\n      }, f.filename, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }, this);\n    }), fileList && fileList.map(f => {\n      // 이미지 미리보기 \n      const src = URL.createObjectURL(f);\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: src,\n          alt: \"error\",\n          width: \"100\",\n          height: \"100\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => onClick(f.name),\n          children: \"X\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 15\n        }, this)]\n      }, f.name, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(FileList, \"+JhBtFIgWPsvNQYdZset2tZeLJE=\");\n_c = FileList;\nexport default FileList;\nvar _c;\n$RefreshReg$(_c, \"FileList\");","map":{"version":3,"names":["useState","useEffect","jsxDEV","_jsxDEV","FileList","_ref","_s","fileList","setFileList","uploadedFiles","deleteFileList","setdeleteFileList","hostFileCnt","setHostFileCnt","screenImgs","setScreenImgs","onClick","name","filter","f","onClickDelte","filename","forEach","console","log","children","map","src","fileUri","alt","width","height","fileName","_jsxFileName","lineNumber","columnNumber","URL","createObjectURL","_c","$RefreshReg$"],"sources":["C:/Users/rlawl/IdeaProjects/wwoof-frontend/wwoof-frontend/src/components/mypage/FileList.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\n\r\nconst FileList = ({\r\n  fileList,\r\n  setFileList,\r\n  uploadedFiles,\r\n  deleteFileList,\r\n  setdeleteFileList,\r\n  hostFileCnt,\r\n  setHostFileCnt\r\n}) => {\r\n  // (화면 보여주기용)\r\n  // 서버에 저장되어있는 파일들의 이름을 저장한 배열 화면에 보여줌\r\n  // delete 할 시에 삭제 되어 보여주기 위함\r\n  const [screenImgs, setScreenImgs] = useState([]);\r\n\r\n  // 이미 서버에 저장된 파일들을 담아줌 \r\n  useEffect(()=>{\r\n    uploadedFiles && setScreenImgs([...uploadedFiles])\r\n  },[]);\r\n\r\n  const onClick = (name) => {\r\n    setFileList(fileList.filter((f) => name !== f.name));\r\n  };\r\n\r\n  const onClickDelte = (filename) => {\r\n    // 화면에서 삭제함\r\n    setScreenImgs(screenImgs.filter((f) => filename !== f.filename));\r\n    // 호스트 이미지 파일 개수 하나 빼줌 \r\n    hostFileCnt--;\r\n    setHostFileCnt(hostFileCnt);\r\n    // delete 배열에 저장함\r\n    setdeleteFileList([...deleteFileList, filename]);\r\n  };\r\n  deleteFileList.forEach(f => console.log(\"deleteFileList\" + f));\r\n \r\n\r\n  return (\r\n    <div>\r\n      {screenImgs &&\r\n        screenImgs.map((f) => {\r\n          return (\r\n            <div key={f.filename}>\r\n              <img src={f.fileUri} alt={f.filename} width=\"100\" height=\"100\" />\r\n              <button onClick={() => onClickDelte(f.filename)}>X</button>\r\n            </div>\r\n          );\r\n        })}\r\n\r\n      {fileList &&\r\n        fileList.map((f) => {\r\n          // 이미지 미리보기 \r\n          const src = URL.createObjectURL(f);\r\n          return (\r\n            <div key={f.name}>\r\n              <img src={src} alt=\"error\" width=\"100\" height=\"100\" />\r\n              <button onClick={() => onClick(f.name)}>X</button>\r\n            </div>\r\n          );\r\n        })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FileList;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}