{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rlawl\\\\IdeaProjects\\\\wwoof-frontend\\\\wwoof-frontend\\\\src\\\\components\\\\mypage\\\\MyinfoHost.js\",\n  _s = $RefreshSig$();\nimport { Link } from \"react-router-dom\";\nimport { useLoaderData, json } from \"react-router-dom\";\nimport HostRegisterForm from \"./HostRegisterForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction MyinfoHost() {\n  _s();\n  const host = useLoaderData();\n  console.log(host);\n  // loader를 이용해서 가져온 response 정보\n  if (host.user === null || host.user === undefined) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(HostRegisterForm, {\n        method: \"PUT\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  } else {\n    return /*#__PURE__*/_jsxDEV(HostRegisterForm, {\n      host: host,\n      method: \"PUT\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 12\n    }, this);\n  }\n}\n_s(MyinfoHost, \"Ovi5TiDCGsyBhWQbTOQ5hCUJyzQ=\", false, function () {\n  return [useLoaderData];\n});\n_c = MyinfoHost;\nexport default MyinfoHost;\nexport async function loader() {\n  // 여기서 상세보기 조회 -> 값이 있으면 hostEdit -> hostRegisterForm에 method put으로\n  // 매번 token header 에 넣어서 보내야하는지 모르겠음\n  // user의 정보로 찾아야함\n  let headers = new Headers({\n    \"Content-Type\": \"application/json\"\n  });\n  const accessToken = localStorage.getItem(\"ACCESS_TOKEN\");\n  if (accessToken && accessToken !== null) {\n    headers.append(\"Authorization\", \"Bearer \" + accessToken);\n  }\n  const response = await fetch(\"http://localhost:8080/api/host/info\", {\n    method: \"GET\",\n    headers: headers\n  });\n  console.log(response);\n  if (!response.ok) {\n    throw json({\n      message: \"Could not fetch events.\"\n    }, {\n      status: 500\n    });\n  } else {\n    return response;\n  }\n}\nvar _c;\n$RefreshReg$(_c, \"MyinfoHost\");","map":{"version":3,"names":["Link","useLoaderData","json","HostRegisterForm","jsxDEV","_jsxDEV","Fragment","_Fragment","MyinfoHost","_s","host","console","log","user","undefined","children","method","fileName","_jsxFileName","lineNumber","columnNumber","_c","loader","headers","Headers","accessToken","localStorage","getItem","append","response","fetch","ok","message","status","$RefreshReg$"],"sources":["C:/Users/rlawl/IdeaProjects/wwoof-frontend/wwoof-frontend/src/components/mypage/MyinfoHost.js"],"sourcesContent":["import { Link } from \"react-router-dom\";\r\nimport { useLoaderData, json} from \"react-router-dom\";\r\nimport HostRegisterForm from \"./HostRegisterForm\";\r\n\r\nfunction MyinfoHost() {\r\n  const host = useLoaderData();\r\n  console.log(host);\r\n  // loader를 이용해서 가져온 response 정보\r\n  if (host.user===null || host.user === undefined) {\r\n    return (\r\n      <>\r\n        <HostRegisterForm method=\"PUT\" />\r\n      </>\r\n    );\r\n  } else {\r\n    return <HostRegisterForm host={host} method=\"PUT\" />;\r\n  }\r\n}\r\nexport default MyinfoHost;\r\n\r\nexport async function loader() {\r\n  // 여기서 상세보기 조회 -> 값이 있으면 hostEdit -> hostRegisterForm에 method put으로\r\n  // 매번 token header 에 넣어서 보내야하는지 모르겠음\r\n  // user의 정보로 찾아야함\r\n  let headers = new Headers({\r\n    \"Content-Type\": \"application/json\",\r\n  });\r\n\r\n  const accessToken = localStorage.getItem(\"ACCESS_TOKEN\");\r\n  if (accessToken && accessToken !== null) {\r\n    headers.append(\"Authorization\", \"Bearer \" + accessToken);\r\n  }\r\n  const response = await fetch(\"http://localhost:8080/api/host/info\", {\r\n    method: \"GET\",\r\n    headers: headers,\r\n  });\r\n  console.log(response);\r\n  if (!response.ok) {\r\n    throw json(\r\n      { message: \"Could not fetch events.\" },\r\n      {\r\n        status: 500,\r\n      }\r\n    );\r\n  } else {\r\n    return response;\r\n  }\r\n}\r\n"],"mappings":";;AAAA,SAASA,IAAI,QAAQ,kBAAkB;AACvC,SAASC,aAAa,EAAEC,IAAI,QAAO,kBAAkB;AACrD,OAAOC,gBAAgB,MAAM,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAElD,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACpB,MAAMC,IAAI,GAAGT,aAAa,CAAC,CAAC;EAC5BU,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;EACjB;EACA,IAAIA,IAAI,CAACG,IAAI,KAAG,IAAI,IAAIH,IAAI,CAACG,IAAI,KAAKC,SAAS,EAAE;IAC/C,oBACET,OAAA,CAAAE,SAAA;MAAAQ,QAAA,eACEV,OAAA,CAACF,gBAAgB;QAACa,MAAM,EAAC;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC,gBACjC,CAAC;EAEP,CAAC,MAAM;IACL,oBAAOf,OAAA,CAACF,gBAAgB;MAACO,IAAI,EAAEA,IAAK;MAACM,MAAM,EAAC;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACtD;AACF;AAACX,EAAA,CAbQD,UAAU;EAAA,QACJP,aAAa;AAAA;AAAAoB,EAAA,GADnBb,UAAU;AAcnB,eAAeA,UAAU;AAEzB,OAAO,eAAec,MAAMA,CAAA,EAAG;EAC7B;EACA;EACA;EACA,IAAIC,OAAO,GAAG,IAAIC,OAAO,CAAC;IACxB,cAAc,EAAE;EAClB,CAAC,CAAC;EAEF,MAAMC,WAAW,GAAGC,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC;EACxD,IAAIF,WAAW,IAAIA,WAAW,KAAK,IAAI,EAAE;IACvCF,OAAO,CAACK,MAAM,CAAC,eAAe,EAAE,SAAS,GAAGH,WAAW,CAAC;EAC1D;EACA,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAAC,qCAAqC,EAAE;IAClEd,MAAM,EAAE,KAAK;IACbO,OAAO,EAAEA;EACX,CAAC,CAAC;EACFZ,OAAO,CAACC,GAAG,CAACiB,QAAQ,CAAC;EACrB,IAAI,CAACA,QAAQ,CAACE,EAAE,EAAE;IAChB,MAAM7B,IAAI,CACR;MAAE8B,OAAO,EAAE;IAA0B,CAAC,EACtC;MACEC,MAAM,EAAE;IACV,CACF,CAAC;EACH,CAAC,MAAM;IACL,OAAOJ,QAAQ;EACjB;AACF;AAAC,IAAAR,EAAA;AAAAa,YAAA,CAAAb,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}