{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rlawl\\\\IdeaProjects\\\\wwoof-frontend\\\\wwoof-frontend\\\\src\\\\components\\\\mypage\\\\AddressFind.js\";\nimport React from 'react';\nimport { useDaumPostcodePopup } from 'react-daum-postcode';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddressFind = props => {\n  // 우편번호 검색 후 주소 클릭 시 실행될 함수, data callback 용\n  new daum.Postcode({\n    oncomplete: function (data) {\n      // 팝업에서 검색결과 항목을 클릭했을때 실행할 코드를 작성하는 부분.\n\n      // 각 주소의 노출 규칙에 따라 주소를 조합한다.\n      // 내려오는 변수가 값이 없는 경우엔 공백('')값을 가지므로, 이를 참고하여 분기 한다.\n      var addr = ''; // 주소 변수\n      var extraAddr = ''; // 참고항목 변수\n\n      //사용자가 선택한 주소 타입에 따라 해당 주소 값을 가져온다.\n      if (data.userSelectedType === 'R') {\n        // 사용자가 도로명 주소를 선택했을 경우\n        addr = data.roadAddress;\n      } else {\n        // 사용자가 지번 주소를 선택했을 경우(J)\n        addr = data.jibunAddress;\n      }\n\n      // 사용자가 선택한 주소가 도로명 타입일때 참고항목을 조합한다.\n      if (data.userSelectedType === 'R') {\n        // 법정동명이 있을 경우 추가한다. (법정리는 제외)\n        // 법정동의 경우 마지막 문자가 \"동/로/가\"로 끝난다.\n        if (data.bname !== '' && /[동|로|가]$/g.test(data.bname)) {\n          extraAddr += data.bname;\n        }\n        // 건물명이 있고, 공동주택일 경우 추가한다.\n        if (data.buildingName !== '' && data.apartment === 'Y') {\n          extraAddr += extraAddr !== '' ? ', ' + data.buildingName : data.buildingName;\n        }\n        // 표시할 참고항목이 있을 경우, 괄호까지 추가한 최종 문자열을 만든다.\n        if (extraAddr !== '') {\n          extraAddr = ' (' + extraAddr + ')';\n        }\n        // 조합된 참고항목을 해당 필드에 넣는다.\n        document.getElementById(\"sample6_extraAddress\").value = extraAddr;\n      } else {\n        document.getElementById(\"sample6_extraAddress\").value = '';\n      }\n\n      // 우편번호와 주소 정보를 해당 필드에 넣는다.\n      document.getElementById('sample6_postcode').value = data.zonecode;\n      document.getElementById(\"sample6_address\").value = addr;\n      // 커서를 상세주소 필드로 이동한다.\n      document.getElementById(\"sample6_detailAddress\").focus();\n    }\n  }).open();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      id: \"sample6_postcode\",\n      placeholder: \"\\uC6B0\\uD3B8\\uBC88\\uD638\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"button\",\n      onclick: \"sample6_execDaumPostcode()\",\n      value: \"\\uC6B0\\uD3B8\\uBC88\\uD638 \\uCC3E\\uAE30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      id: \"sample6_address\",\n      placeholder: \"\\uC8FC\\uC18C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      id: \"sample6_detailAddress\",\n      placeholder: \"\\uC0C1\\uC138\\uC8FC\\uC18C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      id: \"sample6_extraAddress\",\n      placeholder: \"\\uCC38\\uACE0\\uD56D\\uBAA9\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n};\n_c = AddressFind;\nexport default AddressFind;\nvar _c;\n$RefreshReg$(_c, \"AddressFind\");","map":{"version":3,"names":["React","useDaumPostcodePopup","jsxDEV","_jsxDEV","AddressFind","props","daum","Postcode","oncomplete","data","addr","extraAddr","userSelectedType","roadAddress","jibunAddress","bname","test","buildingName","apartment","document","getElementById","value","zonecode","focus","open","children","type","id","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","onclick","_c","$RefreshReg$"],"sources":["C:/Users/rlawl/IdeaProjects/wwoof-frontend/wwoof-frontend/src/components/mypage/AddressFind.js"],"sourcesContent":["import React from 'react';\r\nimport { useDaumPostcodePopup } from 'react-daum-postcode';\r\n \r\nconst AddressFind = (props) => {\r\n\t// 우편번호 검색 후 주소 클릭 시 실행될 함수, data callback 용\r\n  new daum.Postcode({\r\n    oncomplete: function(data) {\r\n        // 팝업에서 검색결과 항목을 클릭했을때 실행할 코드를 작성하는 부분.\r\n\r\n        // 각 주소의 노출 규칙에 따라 주소를 조합한다.\r\n        // 내려오는 변수가 값이 없는 경우엔 공백('')값을 가지므로, 이를 참고하여 분기 한다.\r\n        var addr = ''; // 주소 변수\r\n        var extraAddr = ''; // 참고항목 변수\r\n\r\n        //사용자가 선택한 주소 타입에 따라 해당 주소 값을 가져온다.\r\n        if (data.userSelectedType === 'R') { // 사용자가 도로명 주소를 선택했을 경우\r\n            addr = data.roadAddress;\r\n        } else { // 사용자가 지번 주소를 선택했을 경우(J)\r\n            addr = data.jibunAddress;\r\n        }\r\n\r\n        // 사용자가 선택한 주소가 도로명 타입일때 참고항목을 조합한다.\r\n        if(data.userSelectedType === 'R'){\r\n            // 법정동명이 있을 경우 추가한다. (법정리는 제외)\r\n            // 법정동의 경우 마지막 문자가 \"동/로/가\"로 끝난다.\r\n            if(data.bname !== '' && /[동|로|가]$/g.test(data.bname)){\r\n                extraAddr += data.bname;\r\n            }\r\n            // 건물명이 있고, 공동주택일 경우 추가한다.\r\n            if(data.buildingName !== '' && data.apartment === 'Y'){\r\n                extraAddr += (extraAddr !== '' ? ', ' + data.buildingName : data.buildingName);\r\n            }\r\n            // 표시할 참고항목이 있을 경우, 괄호까지 추가한 최종 문자열을 만든다.\r\n            if(extraAddr !== ''){\r\n                extraAddr = ' (' + extraAddr + ')';\r\n            }\r\n            // 조합된 참고항목을 해당 필드에 넣는다.\r\n            document.getElementById(\"sample6_extraAddress\").value = extraAddr;\r\n        \r\n        } else {\r\n            document.getElementById(\"sample6_extraAddress\").value = '';\r\n        }\r\n\r\n        // 우편번호와 주소 정보를 해당 필드에 넣는다.\r\n        document.getElementById('sample6_postcode').value = data.zonecode;\r\n        document.getElementById(\"sample6_address\").value = addr;\r\n        // 커서를 상세주소 필드로 이동한다.\r\n        document.getElementById(\"sample6_detailAddress\").focus();\r\n    }\r\n}).open();\r\n \r\n    return(\r\n        <div>\r\n            <input type=\"text\" id=\"sample6_postcode\" placeholder=\"우편번호\" />\r\n            <input type=\"button\" onclick=\"sample6_execDaumPostcode()\" value=\"우편번호 찾기\" />\r\n            <input type=\"text\" id=\"sample6_address\" placeholder=\"주소\" />\r\n            <input type=\"text\" id=\"sample6_detailAddress\" placeholder=\"상세주소\" />\r\n            <input type=\"text\" id=\"sample6_extraAddress\" placeholder=\"참고항목\" />\r\n        </div>\r\n    )\r\n}\r\n \r\nexport default AddressFind;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}